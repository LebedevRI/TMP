name: Build Halide nightly amd64 deb package for debian sid

on:
  push:
    branches: [ buildbot ]

jobs:
  linux:
    runs-on: ubuntu-latest
    container: debian:unstable-slim
    env:
      BUILDER: pbuilder
      DEBEMAIL: lebedev.ri@gmail.com
    steps:
      - name: Configure APT
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set -xe
          # Paper over occasional network flakiness of some mirrors.
          echo 'Acquire::Retries "10";' > /etc/apt/apt.conf.d/80retry
          # Do not install recommended packages
          echo 'APT::Install-Recommends "false";' > /etc/apt/apt.conf.d/80recommends
          # Do not install suggested packages
          echo 'APT::Install-Suggests "false";' > /etc/apt/apt.conf.d/80suggests
          # Assume yes
          echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/80forceyes
          # Fix broken packages
          echo 'APT::Get::Fix-Missing "true";' > /etc/apt/apt.conf.d/80fixmissing
      - name: Install/Update necessary packages
        run: |
          set -xe
          rm -rf /var/lib/apt/lists/*
          apt-get update
          apt-get upgrade
          apt-get install git \
                          git-buildpackage \
                          pbuilder \
                          sudo
          apt-get clean
      - name: Create baseline build environment
        run: |
          set -xe
          git-pbuilder create
      - uses: actions/checkout@v3
        name: Fetch our git repository
        with:
          path: ''
          fetch-depth: 0
      - name: Start tracking upstream halide git repository
        run: |
          set -xe
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git remote add upstream https://github.com/halide/Halide.git
      - name: Fetch upstream halide git repository
        run: |
          set -xe
          git fetch upstream
      - name: Refresh our copy of `main` branch
        run: |
          set -xe
          git checkout -B main upstream/main
          git push -f origin
      - name: Prepare the package
        run: |
          set -xe
          git checkout -B patch-queue/debian-nightly origin/patch-queue/debian-nightly
          git rebase main patch-queue/debian-nightly
          git push -f origin
          git checkout -b patch-queue/main
          git checkout main
          test -e debian && echo "debian/ already exists." && exit 1
          git checkout origin/debian-nightly -- debian/
          test -e debian/patches && echo "debian/patches already exists." && exit 1
          gbp pq export
          gbp dch --snapshot --debian-branch=main --since=HEAD --snapshot-number=0
      - name: BUILD
        run: |
          set -xe
          DEB_BUILD_OPTIONS=nopgo,nocheck gbp buildpackage --git-ignore-new --git-ignore-branch
